#!/sbin/openrc-run
# Copyright (c) 2007-2015 The OpenRC Authors.
# See the Authors file at the top-level directory of this distribution and
# https://github.com/OpenRC/openrc/blob/master/AUTHORS
#
# This file is part of OpenRC. It is subject to the license terms in
# the LICENSE file found in the top-level directory of this
# distribution and at https://github.com/OpenRC/openrc/blob/master/LICENSE
# This file may not be copied, modified, propagated, or distributed
# except according to the terms contained in the LICENSE file.

command=%%PREFIX%%/sbin/dhcpcd
pidfile=/var/run/dhcpcd.pid
command_args="-q $interfaces"
name="DHCP Client Daemon"

depend()
{
	provide net
	need localmount
	use logger
	after bootmisc modules
}

stop_pre()
{
	# When shutting down, kill dhcpcd but preserve network
	# We do this as /var/run/dhcpcd could be cleaned out when we
	# return to multiuser.
	if yesno $RC_GOINGDOWN; then
		: ${stopsig:=SIGKILL}
	fi
}

start_pre()
{
	if [ ! -e /etc/rc.conf ] ; then return 1 ; fi

	# Get our ifconfig settings
	have_ipv4="false"
	have_ipv6="false"
	count=0
	while read i
	do
		echo "$i" | grep -q "^ifconfig_"
		if [ $? -ne 0 ] ; then continue ; fi

		val=$(echo $i | cut -d = -f 2)
		echo $val | grep -q -e "DHCP" -e "IPV6" -e "ALL"
		if [ $? -ne 0 ] ; then continue ; fi

		echo $val | grep -q "DHCP"
		if [ $? -eq 0 ] ; then have_ipv4="true"; fi

		echo $val | grep -q "IPV6"
		if [ $? -eq 0 ] ; then have_ipv6="true"; fi

		echo $val | grep -q "ALL"
		if [ $? -eq 0 ] ; then have_ipv4="true"; have_ipv6="true"; fi

		device=$(echo $i | cut -d = -f 1 | sed 's|ifconfig_||g')
		interfaces="$device $interfaces"
		count=`expr $count + 1`
	done < /etc/rc.conf

	# If no interfaces are defined, time to stop
	if [ -z "$interfaces" ] ; then
		mark_service_inactive
		return 1
	fi

	ebegin "Detected DHCP Client Daemon interfaces: $interfaces"

	# This is a v4 only request?
	if [ "$have_ipv6" = "false" ] ; then
		command_args="${command_args} -4"
	fi

	# This is a v6 only request?
	if [ "$have_ipv4" = "false" ] ; then
		command_args="${command_args} -6"
	fi

	# Enable Master mode on a single interface
	if [ "$count" = "1" ] ; then
		command_args="${command_args} -M"
	fi

        command_args="${command_args} $interfaces"
	export command_args
	eend 0 ""
}
